package rpc;/*
 * Automatically generated by jrpcgen 1.1.3 on 16-12-16 ����10:24
 * jrpcgen is part of the "Remote Tea" ONC/RPC package for Java
 * See http://remotetea.sourceforge.net for details
 */
import org.acplt.oncrpc.*;
import java.io.IOException;

import java.net.InetAddress;

import org.acplt.oncrpc.server.*;

/**
 */
public abstract class rpcServerStub extends OncRpcServerStub implements OncRpcDispatchable {

    public rpcServerStub()
           throws OncRpcException, IOException {
        this(0);
    }

    public rpcServerStub(int port)
           throws OncRpcException, IOException {
        this(null, port);
    }

    public rpcServerStub(InetAddress bindAddr, int port)
           throws OncRpcException, IOException {
        info = new OncRpcServerTransportRegistrationInfo [] {
            new OncRpcServerTransportRegistrationInfo(rpc.TEST_RPC_FUNCTION_NUMBER, 1),
        };
        transports = new OncRpcServerTransport [] {
            new OncRpcUdpServerTransport(this, bindAddr, port, info, 32768)
            ,
            new OncRpcTcpServerTransport(this, bindAddr, port, info, 32768)
        };
    }

    public void dispatchOncRpcCall(OncRpcCallInformation call, int program, int version, int procedure)
           throws OncRpcException, IOException {
        if ( version == 1 ) {
            switch ( procedure ) {
            case 1: {
                XdrString args$ = new XdrString();
                call.retrieveCall(args$);
                RpcBitmap result$ = getImg_1(args$.stringValue());
                call.reply(result$);
                break;
            }
            case 2: {
                call.retrieveCall(XdrVoid.XDR_VOID);
                XdrString result$ = new XdrString(getFileTree_1());
                call.reply(result$);
                break;
            }
            case 0: {
                call.retrieveCall(XdrVoid.XDR_VOID);
                call.reply(XdrVoid.XDR_VOID);
                break;
            }
            default:
                call.failProcedureUnavailable();
            }
        } else {
            call.failProgramUnavailable();
        }
    }

    public abstract RpcBitmap getImg_1(String arg1);

    public abstract String getFileTree_1();

}
// End of rpcServerStub.java
